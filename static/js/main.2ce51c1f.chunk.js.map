{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts-actions.jsx","redux/contacts-reducer.jsx","redux/store.jsx","components/Container/Container.jsx","components/Section/Section.jsx","redux/contacts-selectors.jsx","redux/contacts-operations.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","fetchContactsSuccess","createAction","fetchContactsRequest","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","itemsReducer","createReducer","_","payload","state","filter","id","filterReducer","loading","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","s","container","Section","title","section","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","alert","post","then","data","catch","error","contactsOperations","form","type","placeholder","onChange","button","ContactList","useEffect","a","get","list","map","listItem","itemName","onClick","delete","deleteBtn","Filter","filterForm","contactsActions","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ce51c1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2qoHf\",\"name\":\"ContactForm_name__14OsP\",\"number\":\"ContactForm_number__3kv0f\",\"button\":\"ContactForm_button__2th4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3luRK\",\"listItem\":\"ContactList_listItem__dxpC6\",\"deleteBtn\":\"ContactList_deleteBtn__2ydn7\",\"itemName\":\"ContactList_itemName__338tV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1G_Dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2R1b8\",\"filterForm\":\"Filter_filterForm__1IVdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__mq_sJ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n/* export const persistor = persistStore(store); */\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport * as contactsOperations from '../../redux/contacts-operations';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const contactCheck = () => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return true;\n    }\n    if (name === '' || number === '') {\n      alert('Please fill in all the fields');\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contactCheck()) {\n      reset();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={handleChange}\n          className={s.name}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"Enter your mobile number\"\n          value={number}\n          onChange={handleChange}\n          className={s.number}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport * as contactsOperations from '../../redux/contacts-operations';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.listItem}>\n          <p className={s.itemName}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            className={s.deleteBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterForm}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n        className={s.filter}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n/* import { PersistGate } from 'redux-persist/integration/react'; */\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*  <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/*  </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}